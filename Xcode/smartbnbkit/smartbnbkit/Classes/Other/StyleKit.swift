//
//  StyleKit.swift
//  smartbnbkit
//
//  Created by Roman Stetsenko on 8/23/16.
//  Copyright (c) 2016 Toptal. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class StyleKit : NSObject {

    //// Cache

    private struct Cache {
        static let appPinkColor: UIColor = UIColor(red: 0.941, green: 0.357, blue: 0.537, alpha: 1.000)
        static let appBlueColor: UIColor = UIColor(red: 0.000, green: 0.690, blue: 0.816, alpha: 1.000)
        static let appBlackColor: UIColor = UIColor(red: 0.137, green: 0.122, blue: 0.125, alpha: 1.000)
        static var imageOfEye: UIImage?
        static var eyeTargets: [AnyObject]?
    }

    //// Colors

    public class var appPinkColor: UIColor { return Cache.appPinkColor }
    public class var appBlueColor: UIColor { return Cache.appBlueColor }
    public class var appBlackColor: UIColor { return Cache.appBlackColor }

    //// Drawing Methods

    public class func drawEye() {

        //// Group
        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalInRect: CGRect(x: 1, y: 1, width: 98, height: 98))
        StyleKit.appBlackColor.setFill()
        ovalPath.fill()
    }

    //// Generated Images

    public class var imageOfEye: UIImage {
        if Cache.imageOfEye != nil {
            return Cache.imageOfEye!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 100, height: 100), false, 0)
            StyleKit.drawEye()

        Cache.imageOfEye = UIGraphicsGetImageFromCurrentImageContext().imageWithRenderingMode(.AlwaysOriginal)
        UIGraphicsEndImageContext()

        return Cache.imageOfEye!
    }

    //// Customization Infrastructure

    @IBOutlet var eyeTargets: [AnyObject]! {
        get { return Cache.eyeTargets }
        set {
            Cache.eyeTargets = newValue
            for target: AnyObject in newValue {
                target.performSelector(NSSelectorFromString("setImage:"), withObject: StyleKit.imageOfEye)
            }
        }
    }

}
